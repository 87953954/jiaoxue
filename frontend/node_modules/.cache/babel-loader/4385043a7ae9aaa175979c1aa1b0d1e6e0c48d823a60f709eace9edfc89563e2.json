{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, resolveDirective as _resolveDirective, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"课程列表\", -1 /* HOISTED */)), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $data.courseList,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"课程名称\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"teacherId\",\n      label: \"教师ID\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createBlock","_component_el_table","data","$data","courseList","style","default","_withCtx","_createVNode","_component_el_table_column","prop","label","_","loading"],"sources":["/home/user/jiaoxue/frontend/src/components/CourseList.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>课程列表</h2>\n    <el-table :data=\"courseList\" style=\"width: 100%\" v-loading=\"loading\">\n      <el-table-column prop=\"name\" label=\"课程名称\" />\n      <el-table-column prop=\"teacherId\" label=\"教师ID\" />\n    </el-table>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  import { ElMessage } from 'element-plus';\n\n  export default {\n    name: 'CourseList',\n    data() {\n      return {\n        courseList: [],\n        loading: true,\n      };\n    },\n    mounted() {\n      this.fetchCourseList();\n    },\n    methods: {\n      async fetchCourseList() {\n        try {\n          const response = await axios.get('/api/courses');\n          if(response.data.code == 200){\n            this.courseList = response.data.data;\n          }else{\n            ElMessage.error(\"get data error\");\n          }\n        } catch (error) {\n          ElMessage.error('Failed to fetch courses');\n        } finally {\n          this.loading = false;\n        }\n      }\n    }\n  }\n</script>"],"mappings":";;;;;uBACEA,mBAAA,CAMM,c,0BALJC,mBAAA,CAAa,YAAT,MAAI,sB,+BACRC,YAAA,CAGWC,mBAAA;IAHAC,IAAI,EAAEC,KAAA,CAAAC,UAAU;IAAEC,KAAmB,EAAnB;MAAA;IAAA;;IAHjCC,OAAA,EAAAC,QAAA,CAIM,MAA4C,CAA5CC,YAAA,CAA4CC,0BAAA;MAA3BC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC;QACnCH,YAAA,CAAiDC,0BAAA;MAAhCC,IAAI,EAAC,WAAW;MAACC,KAAK,EAAC;;IAL9CC,CAAA;sDAGgET,KAAA,CAAAU,OAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}