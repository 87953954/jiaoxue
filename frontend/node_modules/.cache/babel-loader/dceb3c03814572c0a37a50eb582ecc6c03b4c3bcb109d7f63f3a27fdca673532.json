{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, resolveDirective as _resolveDirective, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"教师列表\", -1 /* HOISTED */)), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $data.teachers,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"姓名\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"teacherNo\",\n      label: \"教师编号\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createBlock","_component_el_table","data","$data","teachers","style","default","_withCtx","_createVNode","_component_el_table_column","prop","label","_","loading"],"sources":["/home/user/jiaoxue/frontend/src/components/TeacherList.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>教师列表</h2>\n    <el-table :data=\"teachers\" style=\"width: 100%\" v-loading=\"loading\">\n      <el-table-column prop=\"name\" label=\"姓名\" />\n      <el-table-column prop=\"teacherNo\" label=\"教师编号\"  />\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'TeacherList',\n  data() {\n    return {\n      teachers: [],\n      loading: true,\n    };\n  },\n  mounted() {\n    this.fetchTeachers();\n  },\n  methods: {\n    async fetchTeachers() {\n      try {\n        const response = await axios.get('/api/teachers');\n        if(response.data.code == 200){\n                    this.teachers = response.data.data;\n        } else{\n          ElMessage.error(\"get data error\");\n        }\n      } catch (error) {\n        ElMessage.error('Failed to fetch teachers');\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n};\n</script>"],"mappings":";;;;;uBACEA,mBAAA,CAMM,c,0BALJC,mBAAA,CAAa,YAAT,MAAI,sB,+BACRC,YAAA,CAGWC,mBAAA;IAHAC,IAAI,EAAEC,KAAA,CAAAC,QAAQ;IAAEC,KAAmB,EAAnB;MAAA;IAAA;;IAH/BC,OAAA,EAAAC,QAAA,CAIM,MAA0C,CAA1CC,YAAA,CAA0CC,0BAAA;MAAzBC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC;QACnCH,YAAA,CAAkDC,0BAAA;MAAjCC,IAAI,EAAC,WAAW;MAACC,KAAK,EAAC;;IAL9CC,CAAA;sDAG8DT,KAAA,CAAAU,OAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}